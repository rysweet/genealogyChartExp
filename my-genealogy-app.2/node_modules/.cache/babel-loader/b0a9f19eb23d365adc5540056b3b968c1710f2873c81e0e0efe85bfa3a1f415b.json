{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/genealogyChartExp/my-genealogy-app/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport sampleData from \"./data/sampleData.json\";\nimport Controls from \"./components/Controls\";\nimport GenealogyChart from \"./components/GenealogyChart\";\nimport { importGedcomFile } from \"./gedcom/importGedcom\";\nimport { exportGedcom } from \"./gedcom/exportGedcom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Default to 5 generations\n  const [maxGenerations, setMaxGenerations] = useState(5);\n  const [people, setPeople] = useState([]);\n  useEffect(() => {\n    // Load sample data on startup\n    setPeople(sampleData);\n  }, []);\n  const handleImportGedcom = async file => {\n    try {\n      const importedPeople = await importGedcomFile(file);\n      setPeople(importedPeople);\n    } catch (err) {\n      console.error(\"Error importing GEDCOM:\", err);\n    }\n  };\n  const handleExportGedcom = () => {\n    const gedcomText = exportGedcom(people);\n    const blob = new Blob([gedcomText], {\n      type: \"text/plain;charset=utf-8\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"family.ged\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const addGeneration = () => {\n    setMaxGenerations(prev => prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Genealogy Chart (5 Generations by Default)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      onImportGedcom: handleImportGedcom,\n      onExportGedcom: handleExportGedcom,\n      onAddGeneration: addGeneration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GenealogyChart, {\n      people: people,\n      maxGenerations: maxGenerations,\n      centerPersonId: \"g0_1\",\n      onUpdatePeople: setPeople\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"q30cm2GyyBcegUE9Gj/BwOVBzK0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","sampleData","Controls","GenealogyChart","importGedcomFile","exportGedcom","jsxDEV","_jsxDEV","App","_s","maxGenerations","setMaxGenerations","people","setPeople","handleImportGedcom","file","importedPeople","err","console","error","handleExportGedcom","gedcomText","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","addGeneration","prev","style","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onImportGedcom","onExportGedcom","onAddGeneration","centerPersonId","onUpdatePeople","_c","$RefreshReg$"],"sources":["/Users/ryan/genealogyChartExp/my-genealogy-app/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport sampleData from \"./data/sampleData.json\";\nimport Controls from \"./components/Controls\";\nimport GenealogyChart from \"./components/GenealogyChart\";\nimport { importGedcomFile } from \"./gedcom/importGedcom\";\nimport { exportGedcom } from \"./gedcom/exportGedcom\";\n\nfunction App() {\n  // Default to 5 generations\n  const [maxGenerations, setMaxGenerations] = useState(5);\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    // Load sample data on startup\n    setPeople(sampleData);\n  }, []);\n\n  const handleImportGedcom = async (file) => {\n    try {\n      const importedPeople = await importGedcomFile(file);\n      setPeople(importedPeople);\n    } catch (err) {\n      console.error(\"Error importing GEDCOM:\", err);\n    }\n  };\n\n  const handleExportGedcom = () => {\n    const gedcomText = exportGedcom(people);\n    const blob = new Blob([gedcomText], { type: \"text/plain;charset=utf-8\" });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"family.ged\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const addGeneration = () => {\n    setMaxGenerations((prev) => prev + 1);\n  };\n\n  return (\n    <div style={{ fontFamily: \"Arial, sans-serif\" }}>\n      <h1>Genealogy Chart (5 Generations by Default)</h1>\n      <Controls\n        onImportGedcom={handleImportGedcom}\n        onExportGedcom={handleExportGedcom}\n        onAddGeneration={addGeneration}\n      />\n      <GenealogyChart\n        people={people}\n        maxGenerations={maxGenerations}\n        centerPersonId=\"g0_1\"\n        onUpdatePeople={setPeople}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACAa,SAAS,CAACZ,UAAU,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,kBAAkB,GAAG,MAAOC,IAAI,IAAK;IACzC,IAAI;MACF,MAAMC,cAAc,GAAG,MAAMZ,gBAAgB,CAACW,IAAI,CAAC;MACnDF,SAAS,CAACG,cAAc,CAAC;IAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IAC/C;EACF,CAAC;EAED,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,UAAU,GAAGhB,YAAY,CAACO,MAAM,CAAC;IACvC,MAAMU,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,UAAU,CAAC,EAAE;MAAEG,IAAI,EAAE;IAA2B,CAAC,CAAC;IACzE,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IACrC,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGN,GAAG;IACfG,IAAI,CAACI,QAAQ,GAAG,YAAY;IAC5BH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;IACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;EACjC,CAAC;EAED,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B1B,iBAAiB,CAAE2B,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;EACvC,CAAC;EAED,oBACE/B,OAAA;IAAKgC,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAoB,CAAE;IAAAC,QAAA,gBAC9ClC,OAAA;MAAAkC,QAAA,EAAI;IAA0C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDtC,OAAA,CAACL,QAAQ;MACP4C,cAAc,EAAEhC,kBAAmB;MACnCiC,cAAc,EAAE3B,kBAAmB;MACnC4B,eAAe,EAAEX;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFtC,OAAA,CAACJ,cAAc;MACbS,MAAM,EAAEA,MAAO;MACfF,cAAc,EAAEA,cAAe;MAC/BuC,cAAc,EAAC,MAAM;MACrBC,cAAc,EAAErC;IAAU;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACpC,EAAA,CAnDQD,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}