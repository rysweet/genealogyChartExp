{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/genealogyChartExp/my-genealogy-app/src/components/GenealogyChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport PersonEditForm from \"./PersonEditForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RING_WIDTH = 100; // radial width for each generation ring\nconst ARC_PADDING = 2; // spacing (in pixels or degrees) between arcs\n\nexport default function GenealogyChart({\n  people,\n  maxGenerations,\n  centerPersonId,\n  onUpdatePeople\n}) {\n  _s();\n  const [selectedPersonId, setSelectedPersonId] = useState(null);\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 800\n  });\n  useEffect(() => {\n    if (!people || people.length === 0) return;\n    drawChart();\n  }, [people, maxGenerations]); // Removed the eslint-disable comment\n\n  const drawChart = () => {\n    const width = dimensions.width;\n    const height = dimensions.height;\n    const centerX = width / 2;\n    const centerY = height / 2;\n\n    // Clear previous content\n    d3.select(svgRef.current).selectAll(\"*\").remove();\n    const svg = d3.select(svgRef.current).attr(\"width\", width).attr(\"height\", height);\n\n    // Create a lookup map for quick ID -> Person\n    const peopleMap = new Map(people.map(p => [p.id, p]));\n\n    // Recursively compute the generation # for a given person\n    const getGeneration = (personId, visited = new Set()) => {\n      if (personId === centerPersonId) return 0;\n      if (visited.has(personId)) return Infinity;\n      visited.add(personId);\n      const person = peopleMap.get(personId);\n      if (!person || !person.parents || person.parents.length === 0) {\n        // No parents => treat as top generation from this chain\n        return 9999; // effectively very high if it doesn't connect to center\n      }\n      // generation = 1 + min among parents\n      let gens = person.parents.map(pid => getGeneration(pid, visited));\n      return Math.min(...gens) + 1;\n    };\n\n    // Filter only those within maxGenerations of the center\n    const filteredPeople = people.filter(p => getGeneration(p.id) < maxGenerations);\n\n    // Group by generation\n    const generations = d3.group(filteredPeople, p => getGeneration(p.id));\n\n    // For each generation ring, draw arcs\n    for (let g = 0; g < maxGenerations; g++) {\n      const genPeople = generations.get(g);\n      if (!genPeople) continue;\n      const ringRadiusInner = g * RING_WIDTH + 50; // offset from center\n      const ringRadiusOuter = ringRadiusInner + RING_WIDTH - ARC_PADDING;\n      const arcAngle = 2 * Math.PI / genPeople.length;\n      genPeople.forEach((person, i) => {\n        const startAngle = i * arcAngle;\n        // subtract a tiny fraction to create spacing\n        const endAngle = startAngle + arcAngle - ARC_PADDING * Math.PI / 180;\n        const arcGenerator = d3.arc().innerRadius(ringRadiusInner).outerRadius(ringRadiusOuter).startAngle(startAngle).endAngle(endAngle);\n\n        // Draw arc\n        svg.append(\"path\").attr(\"d\", arcGenerator).attr(\"transform\", \"translate(\" + centerX + \", \" + centerY + \")\").attr(\"fill\", \"#ddd\").attr(\"stroke\", \"#999\").on(\"click\", () => {\n          setSelectedPersonId(person.id);\n        });\n\n        // Add text along arc\n        const textPathId = \"textPath-\" + person.id;\n        svg.append(\"defs\").append(\"path\").attr(\"id\", textPathId).attr(\"d\", arcGenerator()).attr(\"transform\", \"translate(\" + centerX + \", \" + centerY + \")\");\n        svg.append(\"text\").append(\"textPath\").attr(\"xlink:href\", \"#\" + textPathId).attr(\"startOffset\", \"25%\").style(\"fontSize\", \"12px\").style(\"textAnchor\", \"middle\").text(person.firstName + \" \" + person.lastName + \" (\" + person.birthDate + \" - \" + person.deathDate + \")\");\n      });\n    }\n  };\n  const handleEditSave = updatedPerson => {\n    onUpdatePeople(prev => prev.map(p => p.id === updatedPerson.id ? updatedPerson : p));\n    setSelectedPersonId(null);\n  };\n  const handleEditCancel = () => {\n    setSelectedPersonId(null);\n  };\n  const selectedPerson = people.find(p => p.id === selectedPersonId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), selectedPerson && /*#__PURE__*/_jsxDEV(PersonEditForm, {\n      person: selectedPerson,\n      onSave: handleEditSave,\n      onCancel: handleEditCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(GenealogyChart, \"usuRUAbKmh8d3giLTbs4i1VGnHI=\");\n_c = GenealogyChart;\nvar _c;\n$RefreshReg$(_c, \"GenealogyChart\");","map":{"version":3,"names":["React","useState","useRef","useEffect","d3","PersonEditForm","jsxDEV","_jsxDEV","RING_WIDTH","ARC_PADDING","GenealogyChart","people","maxGenerations","centerPersonId","onUpdatePeople","_s","selectedPersonId","setSelectedPersonId","svgRef","dimensions","setDimensions","width","height","length","drawChart","centerX","centerY","select","current","selectAll","remove","svg","attr","peopleMap","Map","map","p","id","getGeneration","personId","visited","Set","has","Infinity","add","person","get","parents","gens","pid","Math","min","filteredPeople","filter","generations","group","g","genPeople","ringRadiusInner","ringRadiusOuter","arcAngle","PI","forEach","i","startAngle","endAngle","arcGenerator","arc","innerRadius","outerRadius","append","on","textPathId","style","text","firstName","lastName","birthDate","deathDate","handleEditSave","updatedPerson","prev","handleEditCancel","selectedPerson","find","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onSave","onCancel","_c","$RefreshReg$"],"sources":["/Users/ryan/genealogyChartExp/my-genealogy-app/src/components/GenealogyChart.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport PersonEditForm from \"./PersonEditForm\";\n\nconst RING_WIDTH = 100;  // radial width for each generation ring\nconst ARC_PADDING = 2;   // spacing (in pixels or degrees) between arcs\n\nexport default function GenealogyChart({ people, maxGenerations, centerPersonId, onUpdatePeople }) {\n  const [selectedPersonId, setSelectedPersonId] = useState(null);\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 800 });\n\n  useEffect(() => {\n    if (!people || people.length === 0) return;\n    drawChart();\n  }, [people, maxGenerations]); // Removed the eslint-disable comment\n\n  const drawChart = () => {\n    const width = dimensions.width;\n    const height = dimensions.height;\n    const centerX = width / 2;\n    const centerY = height / 2;\n\n    // Clear previous content\n    d3.select(svgRef.current).selectAll(\"*\").remove();\n\n    const svg = d3.select(svgRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    // Create a lookup map for quick ID -> Person\n    const peopleMap = new Map(people.map((p) => [p.id, p]));\n\n    // Recursively compute the generation # for a given person\n    const getGeneration = (personId, visited = new Set()) => {\n      if (personId === centerPersonId) return 0;\n      if (visited.has(personId)) return Infinity;\n      visited.add(personId);\n      const person = peopleMap.get(personId);\n      if (!person || !person.parents || person.parents.length === 0) {\n        // No parents => treat as top generation from this chain\n        return 9999; // effectively very high if it doesn't connect to center\n      }\n      // generation = 1 + min among parents\n      let gens = person.parents.map((pid) => getGeneration(pid, visited));\n      return Math.min(...gens) + 1;\n    };\n\n    // Filter only those within maxGenerations of the center\n    const filteredPeople = people.filter((p) => getGeneration(p.id) < maxGenerations);\n\n    // Group by generation\n    const generations = d3.group(filteredPeople, (p) => getGeneration(p.id));\n\n    // For each generation ring, draw arcs\n    for (let g = 0; g < maxGenerations; g++) {\n      const genPeople = generations.get(g);\n      if (!genPeople) continue;\n\n      const ringRadiusInner = g * RING_WIDTH + 50; // offset from center\n      const ringRadiusOuter = ringRadiusInner + RING_WIDTH - ARC_PADDING;\n\n      const arcAngle = (2 * Math.PI) / genPeople.length;\n\n      genPeople.forEach((person, i) => {\n        const startAngle = i * arcAngle;\n        // subtract a tiny fraction to create spacing\n        const endAngle = startAngle + arcAngle - (ARC_PADDING * Math.PI / 180);\n\n        const arcGenerator = d3.arc()\n          .innerRadius(ringRadiusInner)\n          .outerRadius(ringRadiusOuter)\n          .startAngle(startAngle)\n          .endAngle(endAngle);\n\n        // Draw arc\n        svg.append(\"path\")\n          .attr(\"d\", arcGenerator)\n          .attr(\"transform\", \"translate(\" + centerX + \", \" + centerY + \")\")\n          .attr(\"fill\", \"#ddd\")\n          .attr(\"stroke\", \"#999\")\n          .on(\"click\", () => {\n            setSelectedPersonId(person.id);\n          });\n\n        // Add text along arc\n        const textPathId = \"textPath-\" + person.id;\n        svg.append(\"defs\")\n          .append(\"path\")\n          .attr(\"id\", textPathId)\n          .attr(\"d\", arcGenerator())\n          .attr(\"transform\", \"translate(\" + centerX + \", \" + centerY + \")\");\n\n        svg.append(\"text\")\n          .append(\"textPath\")\n          .attr(\"xlink:href\", \"#\" + textPathId)\n          .attr(\"startOffset\", \"25%\")\n          .style(\"fontSize\", \"12px\")\n          .style(\"textAnchor\", \"middle\")\n          .text(\n            person.firstName +\n            \" \" +\n            person.lastName +\n            \" (\" +\n            person.birthDate +\n            \" - \" +\n            person.deathDate +\n            \")\"\n          );\n      });\n    }\n  };\n\n  const handleEditSave = (updatedPerson) => {\n    onUpdatePeople((prev) =>\n      prev.map((p) => (p.id === updatedPerson.id ? updatedPerson : p))\n    );\n    setSelectedPersonId(null);\n  };\n\n  const handleEditCancel = () => {\n    setSelectedPersonId(null);\n  };\n\n  const selectedPerson = people.find((p) => p.id === selectedPersonId);\n\n  return (\n    <div>\n      <svg ref={svgRef}></svg>\n      {selectedPerson && (\n        <PersonEditForm\n          person={selectedPerson}\n          onSave={handleEditSave}\n          onCancel={handleEditCancel}\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}