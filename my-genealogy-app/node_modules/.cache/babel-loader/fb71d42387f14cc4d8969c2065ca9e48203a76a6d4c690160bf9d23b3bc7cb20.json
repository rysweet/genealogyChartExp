{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/genealogyChartExp/my-genealogy-app/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport sampleData from \"./data/sampleData.json\";\nimport Controls from \"./components/Controls\";\nimport GenealogyChart from \"./components/GenealogyChart\";\nimport { importGedcomFile } from \"./gedcom/importGedcom\";\nimport { exportGedcom } from \"./gedcom/exportGedcom\";\nimport PeopleTable from \"./components/PeopleTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [maxGenerations, setMaxGenerations] = useState(5);\n  const [people, setPeople] = useState([]);\n  const [centerId, setCenterId] = useState(\"g0_1\");\n\n  // Load sample data by default\n  useEffect(() => {\n    setPeople(sampleData);\n    if (sampleData.length > 0) {\n      setCenterId(sampleData[0].id);\n    }\n  }, []);\n  const handleImportGedcom = async file => {\n    try {\n      const importedPeople = await importGedcomFile(file);\n      console.log(\"Imported people:\", importedPeople);\n      if (importedPeople.length > 0) {\n        const importedCenterId = importedPeople[0].id;\n        setCenterId(importedCenterId);\n      }\n      setPeople(importedPeople);\n    } catch (err) {\n      console.error(\"Error importing GEDCOM:\", err);\n    }\n  };\n  const handleExportGedcom = () => {\n    const gedcomText = exportGedcom(people);\n    const blob = new Blob([gedcomText], {\n      type: \"text/plain;charset=utf-8\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"family.ged\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const addGeneration = () => {\n    setMaxGenerations(prev => prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Genealogy Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      onImportGedcom: handleImportGedcom,\n      onExportGedcom: handleExportGedcom,\n      onAddGeneration: addGeneration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GenealogyChart, {\n      people: people,\n      maxGenerations: maxGenerations,\n      centerPersonId: centerId,\n      onUpdatePeople: setPeople\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PeopleTable, {\n      people: people,\n      onSetCenter: personId => setCenterId(personId)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cYDJ4maOY9nNwaQ1Mr9CLDlDCmA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","sampleData","Controls","GenealogyChart","importGedcomFile","exportGedcom","PeopleTable","jsxDEV","_jsxDEV","App","_s","maxGenerations","setMaxGenerations","people","setPeople","centerId","setCenterId","length","id","handleImportGedcom","file","importedPeople","console","log","importedCenterId","err","error","handleExportGedcom","gedcomText","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","addGeneration","prev","style","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onImportGedcom","onExportGedcom","onAddGeneration","centerPersonId","onUpdatePeople","onSetCenter","personId","_c","$RefreshReg$"],"sources":["/Users/ryan/genealogyChartExp/my-genealogy-app/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport sampleData from \"./data/sampleData.json\";\nimport Controls from \"./components/Controls\";\nimport GenealogyChart from \"./components/GenealogyChart\";\nimport { importGedcomFile } from \"./gedcom/importGedcom\";\nimport { exportGedcom } from \"./gedcom/exportGedcom\";\nimport PeopleTable from \"./components/PeopleTable\";\n\nfunction App() {\n  const [maxGenerations, setMaxGenerations] = useState(5);\n  const [people, setPeople] = useState([]);\n  const [centerId, setCenterId] = useState(\"g0_1\");\n\n  // Load sample data by default\n  useEffect(() => {\n    setPeople(sampleData);\n    if (sampleData.length > 0) {\n      setCenterId(sampleData[0].id);\n    }\n  }, []);\n\n  const handleImportGedcom = async (file) => {\n    try {\n      const importedPeople = await importGedcomFile(file);\n      console.log(\"Imported people:\", importedPeople);\n      if (importedPeople.length > 0) {\n        const importedCenterId = importedPeople[0].id;\n        setCenterId(importedCenterId);\n      }\n      setPeople(importedPeople);\n    } catch (err) {\n      console.error(\"Error importing GEDCOM:\", err);\n    }\n  };\n\n  const handleExportGedcom = () => {\n    const gedcomText = exportGedcom(people);\n    const blob = new Blob([gedcomText], { type: \"text/plain;charset=utf-8\" });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"family.ged\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const addGeneration = () => {\n    setMaxGenerations((prev) => prev + 1);\n  };\n\n  return (\n    <div style={{ fontFamily: \"Arial, sans-serif\" }}>\n      <h1>Genealogy Chart</h1>\n      <Controls\n        onImportGedcom={handleImportGedcom}\n        onExportGedcom={handleExportGedcom}\n        onAddGeneration={addGeneration}\n      />\n      <GenealogyChart\n        people={people}\n        maxGenerations={maxGenerations}\n        centerPersonId={centerId}\n        onUpdatePeople={setPeople}\n      />\n      <PeopleTable\n        people={people}\n        onSetCenter={(personId) => setCenterId(personId)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}